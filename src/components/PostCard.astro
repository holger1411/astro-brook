---
import { formatDate } from '../utils/date';
import { optimizeImagePath } from '../utils/optimizeImagePath';

interface Props {
  post: {
    slug: string;
    url: string;
    frontmatter: {
      title: string;
      date: string;
      excerpt: string;
      image?: string;
      tags?: string[];
    };
  };
  showImage?: boolean;
  showExcerpt?: boolean;
  showTags?: boolean;
}

const { post, showImage = true, showExcerpt = true, showTags = true } = Astro.props;
const { title, date, excerpt, image, tags } = post.frontmatter;

// Ensure image path is optimized
const optimizedImagePath = image ? optimizeImagePath(image) : null;
---

<article class="border-t border-gray-200 py-[4vh] xl:py-8" transition:name={`post-${post.slug}`}>
  <div class="space-y-2">
    <div class="flex flex-col sm:flex-row justify-between items-center gap-2 mb-2">
      <h2 class="text-xl md:text-3xl xl:text-4xl">
        <a href={post.url} class="hover:underline focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded">
          {title}
        </a>
      </h2>
      <time 
        datetime={new Date(date).toISOString()}
        class="text-gray-500 text-sm shrink-0 sm:ml-4 sm:text-right self-center"
      >
        {formatDate(date)}
      </time>
    </div>
    
    {showImage && optimizedImagePath && (
      <a 
        href={post.url} 
        class="block feature-image focus-ring"
        aria-label={`View ${title} article`}
      >
        <img
          src={optimizedImagePath}
          alt={`Preview image for ${title}`}
          class="w-full h-full object-cover transition-transform hover:scale-105"
          loading="lazy"
          decoding="async"
          width="800"
          height="450"
        />
      </a>
    )}
    
    {showExcerpt && (
      <>
        <p class="text-gray-500">{excerpt}</p>
        <div>
          <a 
            href={post.url} 
            class="text-sm font-medium hover:underline focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded px-2 py-1 inline-block"
            aria-label={`Read more about ${title}`}
          >
            Read more <span aria-hidden="true">â†’</span>
          </a>
        </div>
      </>
    )}
    
    {showTags && tags && tags.length > 0 && (
      <div class="flex flex-wrap gap-2 pt-2" aria-label="Tags">
        {tags.map((tag) => (
          <a
            href={`/tags/${tag}`}
            class="tag"
            aria-label={`View all posts tagged ${tag}`}
          >
            {tag}
          </a>
        ))}
      </div>
    )}
  </div>
</article>

<!-- Removed inline styles in favor of component classes -->
